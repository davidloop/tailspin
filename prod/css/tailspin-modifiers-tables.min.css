.table{background:#fff!important;border:.0625rem solid #dcdcdc!important;border-bottom:none!important;border-collapse:collapse;margin:0!important;width:100%!important}.table caption{caption-side:top;color:#000;padding:.9375rem 0;text-align:center}.table thead th{text-align:-webkit-match-parent;vertical-align:bottom}.table td,.table th{border:.0625rem solid #dcdcdc!important;border-left:none!important;border-top:none!important;padding:.75rem!important;vertical-align:top}.table td:last-of-type,.table th:last-of-type{border-right:none!important}.table.table-dark{color:#fff}.table.table-dark td,.table.table-dark th{background:#303336!important}.table.table-stripped thead tr{background:#fcfcfc}.table.table-stripped tbody tr:nth-child(odd){background:#f5f5f5}.table.table-stripped td,.table.table-stripped th{border-right:none!important}.table.table-stripped.table-dark thead tr th{background:#303336!important}.table.table-stripped.table-dark tbody tr:nth-child(odd) td{background:#1e1f21!important}.table.table-centered td,.table.table-centered th{text-align:center}@media (max-width:61.9375rem){.table{border:none!important}.table caption{padding:.625rem 0}.table thead{clip:rect(0 0 0 0);height:.0625rem;margin:-.0625rem;overflow:hidden;padding:0;position:absolute;width:.0625rem}.table td,.table tr{border-bottom:.0625rem solid #dcdcdc!important;display:block}.table tr{margin-bottom:1.875rem}.table td{border-left:.0625rem solid #dcdcdc!important;text-align:right}.table td:first-of-type{border-top:.0625rem solid #dcdcdc!important}.table td:last-of-type{border-bottom:none!important;border-right:.0625rem solid #dcdcdc!important}.table td:before{content:attr(data-label);float:left;font-weight:700}.table.table-stripped td{border-right:.0625rem solid #dcdcdc!important}}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kbG9vcC9Eb2N1bWVudHMvR2l0SHViL3RhaWxzcGluL2Rldi9zcmMvY3NzL21vZGlmaWVycy9fbW9kaWZpZXJzLXRhYmxlcy5zY3NzIiwiL1VzZXJzL2Rsb29wL0RvY3VtZW50cy9HaXRIdWIvdGFpbHNwaW4vZGV2L3NyYy9jc3MvaGVscGVycy9fYnJlYWtwb2ludHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUdJLHlCQUE0QixDQUU1Qix1Q0FBOEIsQ0FBOUIsNEJBQThCLENBQzlCLHdCQUF5QixDQUp6QixrQkFBb0IsQ0FEcEIsb0JBS3lCLENBTjdCLGVBWVEsZ0JBQWlCLENBRmpCLFVBQVksQ0FEWixrQkFBZSxDQUVmLGlCQUNpQixDQVp6QixnQkFnQlEsK0JBQWdDLENBQ2hDLHFCQUFzQixDQWpCOUIsb0JBd0JRLHVDQUF3RCxDQUF4RCwwQkFBd0QsQ0FBeEQseUJBQXdELENBSHhELHdCQUF3QixDQUl4QixrQkFBbUIsQ0F6QjNCLDhDQTRCWSwyQkFBNkIsQ0E1QnpDLGtCQWlDUSxVQUFZLENBakNwQiwwQ0FvQ1ksNEJBQThCLENBcEMxQywrQkEyQ1ksa0JBQW1CLENBM0MvQiw4Q0ErQ1ksa0JBQW1CLENBL0MvQixrREFtRFksMkJBQTZCLENBbkR6Qyw2Q0F5RGdCLDRCQUE4QixDQXpEOUMsNERBNkRnQiw0QkFBOEIsQ0E3RDlDLGtEQXFFWSxpQkFBa0IsQ0NyQjFCLDhCRDJCQSxPQUNJLHFCQUF1QixDQUQzQixlQUlRLGlCQUFlLENBSnZCLGFBUVEsa0JBQW1CLENBQ25CLGVBQVcsQ0FFWCxnQkFBWSxDQUVaLGVBQWdCLENBRGhCLFNBQVUsQ0FFVixpQkFBa0IsQ0FKbEIsY0FJa0IsQ0FkMUIsb0JBa0JRLDhDQUF5RCxDQUN6RCxhQUFjLENBbkJ0QixVQXVCUSxzQkFBbUIsQ0F2QjNCLFVBMkJRLDRDQUF1RCxDQUN2RCxnQkFBaUIsQ0E1QnpCLHdCQStCWSwyQ0FBc0QsQ0EvQmxFLHVCQW9DWSw0QkFBOEIsQ0FEOUIsNkNBQzhCLENBcEMxQyxpQkF3Q1ksd0JBQXlCLENBRXpCLFVBQVcsQ0FEWCxlQUNXLENBMUN2Qix5QkFpRFksNkNBQXdELENBQzNEIiwiZmlsZSI6InRhaWxzcGluLW1vZGlmaWVycy10YWJsZXMubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gVGFibGVzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuOmdsb2JhbCAudGFibGUge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZGVmYXVsdC1ib3JkZXItY29sb3IgIWltcG9ydGFudDtcbiAgICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblxuICAgIGNhcHRpb24ge1xuICAgICAgICBwYWRkaW5nOiAxNXB4IDA7XG4gICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBjYXB0aW9uLXNpZGU6IHRvcDtcbiAgICB9XG5cbiAgICB0aGVhZCB0aCB7XG4gICAgICAgIHRleHQtYWxpZ246IC13ZWJraXQtbWF0Y2gtcGFyZW50O1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgIH1cblxuICAgIHRkLCB0aCB7XG4gICAgICAgIHBhZGRpbmc6IDEycHggIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZGVmYXVsdC1ib3JkZXItY29sb3IgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGRlZmF1bHQtYm9yZGVyLWNvbG9yICFpbXBvcnRhbnQ7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cbiAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLnRhYmxlLWRhcmsge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG5cbiAgICAgICAgdGQsIHRoIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICMzMDMzMzYgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYudGFibGUtc3RyaXBwZWQge1xuXG4gICAgICAgIHRoZWFkIHRyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmY2ZjZmM7XG4gICAgICAgIH1cblxuICAgICAgICB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICAgICAgICB9XG5cbiAgICAgICAgdGQsIHRoIHtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICB9XG5cbiAgICAgICAgJi50YWJsZS1kYXJrIHtcblxuICAgICAgICAgICAgdGhlYWQgdHIgdGgge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMzMDMzMzYgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGJvZHkgdHI6bnRoLWNoaWxkKG9kZCkgdGQge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMxZTFmMjEgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYudGFibGUtY2VudGVyZWQge1xuXG4gICAgICAgIHRkLCB0aCB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBpbmNsdWRlIGJyZWFrcG9pbnQtdGFibGUge1xuICAgIDpnbG9iYWwgLnRhYmxlIHtcbiAgICAgICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgY2FwdGlvbiB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICB0aGVhZCB7XG4gICAgICAgICAgICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgICAgICB3aWR0aDogMXB4O1xuICAgICAgICAgICAgbWFyZ2luOiAtMXB4O1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIH1cblxuICAgICAgICB0ciwgdGQge1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRkZWZhdWx0LWJvcmRlci1jb2xvciAhaW1wb3J0YW50O1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cblxuICAgICAgICB0ciB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgdGQge1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkZGVmYXVsdC1ib3JkZXItY29sb3IgIWltcG9ydGFudDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuXG4gICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZGVmYXVsdC1ib3JkZXItY29sb3IgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRkZWZhdWx0LWJvcmRlci1jb2xvciAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBhdHRyKGRhdGEtbGFiZWwpO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi50YWJsZS1zdHJpcHBlZCB7XG5cbiAgICAgICAgICAgIHRkIHtcbiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkZGVmYXVsdC1ib3JkZXItY29sb3IgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJcbiRicmVha3BvaW50czogKFxuICAgIGRlc2t0b3AtbGc6ICAgICAkYnJlYWtwb2ludC1kZXNrdG9wLWxhcmdlLFxuICAgIGRlc2t0b3AtbWQ6ICAgICAkYnJlYWtwb2ludC1kZXNrdG9wLW1lZGl1bSxcbiAgICBkZXNrdG9wLXNtOiAgICAgJGJyZWFrcG9pbnQtZGVza3RvcC1zbWFsbCxcbiAgICB0YWJsZXQ6ICAgICAgICAgJGJyZWFrcG9pbnQtdGFibGV0LFxuICAgIHBob25lLXhsZzogICAgICAkYnJlYWtwb2ludC1waG9uZS1leHRyYWxhcmdlLFxuICAgIHBob25lLWxnOiAgICAgICAkYnJlYWtwb2ludC1waG9uZS1sYXJnZSxcbiAgICBwaG9uZS1tZDogICAgICAgJGJyZWFrcG9pbnQtcGhvbmUtbWVkaXVtLFxuICAgIHBob25lLXNtOiAgICAgICAkYnJlYWtwb2ludC1waG9uZS1zbWFsbCxcbik7XG5cbi8vIE1heC13aWR0aFxuLy8gdGhlIGdpdmVuIHNjcmVlbiBzaXplIG9yIHNtYWxsZXJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5AbWl4aW4gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50OiAkYnJlYWtwb2ludHMpIHtcblxuICAgICR2YWx1ZXM6IG1hcC12YWx1ZXMoJG1hcDogJGJyZWFrcG9pbnRzKTtcbiAgICAkbGFzdC12YWx1ZTogbnRoKCR2YWx1ZXMsIDgpO1xuICAgICRtYXhfYnJlYWtwb2ludDogbWFwLWdldCgkYnJlYWtwb2ludCwgJG5hbWUpO1xuXG4gICAgQGlmICRsYXN0LXZhbHVlID4gMCB7XG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAoJG1heF9icmVha3BvaW50IC0gMXB4KSkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIHtcbiAgICAgICAgQHdhcm4gXCJUaGUgJyRicmVha3BvaW50LXBob25lLXNtYWxsJyB2YWx1ZSBpbiB0aGUgX3ZhcnMuc2NzcyBmaWxlIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAuXCJcbiAgICB9O1xufVxuXG4vLyBNaW4td2lkdGhcbi8vIHRoZSBnaXZlbiBzY3JlZW4gc2l6ZSBvciBsYXJnZXJcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5AbWl4aW4gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50OiAkYnJlYWtwb2ludHMpIHtcbiAgICBcbiAgICAkdmFsdWVzOiBtYXAtdmFsdWVzKCRtYXA6ICRicmVha3BvaW50cyk7XG4gICAgJGxhc3QtdmFsdWU6IG50aCgkdmFsdWVzLCA4KTtcbiAgICAkbWluX2JyZWFrcG9pbnQ6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICRuYW1lKTtcblxuICAgIEBpZiAkbGFzdC12YWx1ZSA+IDAge1xuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogKCRtaW5fYnJlYWtwb2ludCAtIDBweCkpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIEB3YXJuIFwiVGhlICckYnJlYWtwb2ludC1waG9uZS1zbWFsbCcgdmFsdWUgaW4gdGhlIF92YXJzLnNjc3MgZmlsZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwLlwiXG4gICAgfTtcbn1cblxuLy8gVGFibGVzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuQG1peGluIGJyZWFrcG9pbnQtdGFibGUge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAoJGJyZWFrcG9pbnQtdGFibGUgLSAxcHgpKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn0iXX0= */