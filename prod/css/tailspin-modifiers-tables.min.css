.table{background:#fff!important;border:.0625rem solid #dcdcdc!important;border-bottom:none!important;border-collapse:collapse;margin:0!important;width:100%!important}.table caption{caption-side:top;color:#000;padding:.9375rem 0;text-align:center}.table thead th{text-align:-webkit-match-parent;vertical-align:bottom}.table td,.table th{border:.0625rem solid #dcdcdc!important;border-left:none!important;border-top:none!important;padding:.75rem!important;vertical-align:top}.table td:last-of-type,.table th:last-of-type{border-right:none!important}.table.table-dark{color:#fff}.table.table-dark td,.table.table-dark th{background:#303336!important}.table.table-stripped thead tr{background:#fcfcfc}.table.table-stripped tbody tr:nth-child(odd){background:#f5f5f5}.table.table-stripped td,.table.table-stripped th{border-right:none!important}.table.table-stripped.table-dark thead tr th{background:#303336!important}.table.table-stripped.table-dark tbody tr:nth-child(odd) td{background:#1e1f21!important}.table.table-centered td,.table.table-centered th{text-align:center}@media (max-width:61.9375rem){.table{border:none!important}.table caption{padding:.625rem 0}.table thead{clip:rect(0 0 0 0);height:.0625rem;margin:-.0625rem;overflow:hidden;padding:0;position:absolute;width:.0625rem}.table td,.table tr{border-bottom:.0625rem solid #dcdcdc!important;display:block}.table tr{margin-bottom:1.875rem}.table td{border-left:.0625rem solid #dcdcdc!important;text-align:right}.table td:first-of-type{border-top:.0625rem solid #dcdcdc!important}.table td:last-of-type{border-bottom:none!important;border-right:.0625rem solid #dcdcdc!important}.table td:before{content:attr(data-label);float:left;font-weight:700}.table.table-stripped td{border-right:.0625rem solid #dcdcdc!important}}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZGxvb3AvU2l0ZXMvdGFpbHNwaW4vZGV2L3NyYy9jc3MvbW9kaWZpZXJzL19tb2RpZmllcnMtdGFibGVzLnNjc3MiLCIvVXNlcnMvZGF2aWRsb29wL1NpdGVzL3RhaWxzcGluL2Rldi9zcmMvY3NzL2hlbHBlcnMvX2JyZWFrcG9pbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FHSSx5QkFBNEIsQ0FFNUIsdUNBQThCLENBQTlCLDRCQUE4QixDQUM5Qix3QkFBeUIsQ0FKekIsa0JBQW9CLENBRHBCLG9CQUt5QixDQU43QixlQVlRLGdCQUFpQixDQUZqQixVQUFZLENBRFosa0JBQWUsQ0FFZixpQkFDaUIsQ0FaekIsZ0JBZ0JRLCtCQUFnQyxDQUNoQyxxQkFBc0IsQ0FqQjlCLG9CQXdCUSx1Q0FBd0QsQ0FBeEQsMEJBQXdELENBQXhELHlCQUF3RCxDQUh4RCx3QkFBd0IsQ0FJeEIsa0JBQW1CLENBekIzQiw4Q0E0QlksMkJBQTZCLENBNUJ6QyxrQkFpQ1EsVUFBWSxDQWpDcEIsMENBb0NZLDRCQUE4QixDQXBDMUMsK0JBMkNZLGtCQUFtQixDQTNDL0IsOENBK0NZLGtCQUFtQixDQS9DL0Isa0RBbURZLDJCQUE2QixDQW5EekMsNkNBeURnQiw0QkFBOEIsQ0F6RDlDLDREQTZEZ0IsNEJBQThCLENBN0Q5QyxrREFxRVksaUJBQWtCLENDckIxQiw4QkQyQkEsT0FDSSxxQkFBdUIsQ0FEM0IsZUFJUSxpQkFBZSxDQUp2QixhQVFRLGtCQUFtQixDQUNuQixlQUFXLENBRVgsZ0JBQVksQ0FFWixlQUFnQixDQURoQixTQUFVLENBRVYsaUJBQWtCLENBSmxCLGNBSWtCLENBZDFCLG9CQWtCUSw4Q0FBeUQsQ0FDekQsYUFBYyxDQW5CdEIsVUF1QlEsc0JBQW1CLENBdkIzQixVQTJCUSw0Q0FBdUQsQ0FDdkQsZ0JBQWlCLENBNUJ6Qix3QkErQlksMkNBQXNELENBL0JsRSx1QkFvQ1ksNEJBQThCLENBRDlCLDZDQUM4QixDQXBDMUMsaUJBd0NZLHdCQUF5QixDQUV6QixVQUFXLENBRFgsZUFDVyxDQTFDdkIseUJBaURZLDZDQUF3RCxDQUMzRCIsImZpbGUiOiJ0YWlsc3Bpbi1tb2RpZmllcnMtdGFibGVzLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIFRhYmxlc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbjpnbG9iYWwgLnRhYmxlIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGRlZmF1bHQtYm9yZGVyLWNvbG9yICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZSAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cbiAgICBjYXB0aW9uIHtcbiAgICAgICAgcGFkZGluZzogMTVweCAwO1xuICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY2FwdGlvbi1zaWRlOiB0b3A7XG4gICAgfVxuXG4gICAgdGhlYWQgdGgge1xuICAgICAgICB0ZXh0LWFsaWduOiAtd2Via2l0LW1hdGNoLXBhcmVudDtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICB9XG5cbiAgICB0ZCwgdGgge1xuICAgICAgICBwYWRkaW5nOiAxMnB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGRlZmF1bHQtYm9yZGVyLWNvbG9yICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRkZWZhdWx0LWJvcmRlci1jb2xvciAhaW1wb3J0YW50O1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuXG4gICAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJi50YWJsZS1kYXJrIHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuXG4gICAgICAgIHRkLCB0aCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMzAzMzM2ICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLnRhYmxlLXN0cmlwcGVkIHtcblxuICAgICAgICB0aGVhZCB0ciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmNmY2ZjO1xuICAgICAgICB9XG5cbiAgICAgICAgdGJvZHkgdHI6bnRoLWNoaWxkKG9kZCkge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRkLCB0aCB7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuXG4gICAgICAgICYudGFibGUtZGFyayB7XG5cbiAgICAgICAgICAgIHRoZWFkIHRyIHRoIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMzAzMzM2ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRib2R5IHRyOm50aC1jaGlsZChvZGQpIHRkIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMWUxZjIxICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLnRhYmxlLWNlbnRlcmVkIHtcblxuICAgICAgICB0ZCwgdGgge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AaW5jbHVkZSBicmVha3BvaW50LXRhYmxlIHtcbiAgICA6Z2xvYmFsIC50YWJsZSB7XG4gICAgICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuXG4gICAgICAgIGNhcHRpb24ge1xuICAgICAgICAgICAgcGFkZGluZzogMTBweCAwO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhlYWQge1xuICAgICAgICAgICAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgd2lkdGg6IDFweDtcbiAgICAgICAgICAgIG1hcmdpbjogLTFweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgdHIsIHRkIHtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZGVmYXVsdC1ib3JkZXItY29sb3IgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgdHIge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRkIHtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGRlZmF1bHQtYm9yZGVyLWNvbG9yICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcblxuICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGRlZmF1bHQtYm9yZGVyLWNvbG9yICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkZGVmYXVsdC1ib3JkZXItY29sb3IgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgY29udGVudDogYXR0cihkYXRhLWxhYmVsKTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYudGFibGUtc3RyaXBwZWQge1xuXG4gICAgICAgICAgICB0ZCB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGRlZmF1bHQtYm9yZGVyLWNvbG9yICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiXG4kYnJlYWtwb2ludHM6IChcbiAgICBkZXNrdG9wLWxnOiAgICAgJGJyZWFrcG9pbnQtZGVza3RvcC1sYXJnZSxcbiAgICBkZXNrdG9wLW1kOiAgICAgJGJyZWFrcG9pbnQtZGVza3RvcC1tZWRpdW0sXG4gICAgZGVza3RvcC1zbTogICAgICRicmVha3BvaW50LWRlc2t0b3Atc21hbGwsXG4gICAgdGFibGV0OiAgICAgICAgICRicmVha3BvaW50LXRhYmxldCxcbiAgICBwaG9uZS14bGc6ICAgICAgJGJyZWFrcG9pbnQtcGhvbmUtZXh0cmFsYXJnZSxcbiAgICBwaG9uZS1sZzogICAgICAgJGJyZWFrcG9pbnQtcGhvbmUtbGFyZ2UsXG4gICAgcGhvbmUtbWQ6ICAgICAgICRicmVha3BvaW50LXBob25lLW1lZGl1bSxcbiAgICBwaG9uZS1zbTogICAgICAgJGJyZWFrcG9pbnQtcGhvbmUtc21hbGwsXG4pO1xuXG4vLyBNYXgtd2lkdGhcbi8vIHRoZSBnaXZlbiBzY3JlZW4gc2l6ZSBvciBzbWFsbGVyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuQG1peGluIGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludDogJGJyZWFrcG9pbnRzKSB7XG5cbiAgICAkdmFsdWVzOiBtYXAtdmFsdWVzKCRtYXA6ICRicmVha3BvaW50cyk7XG4gICAgJGxhc3QtdmFsdWU6IG50aCgkdmFsdWVzLCA4KTtcbiAgICAkbWF4X2JyZWFrcG9pbnQ6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICRuYW1lKTtcblxuICAgIEBpZiAkbGFzdC12YWx1ZSA+IDAge1xuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogKCRtYXhfYnJlYWtwb2ludCAtIDFweCkpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIEB3YXJuIFwiVGhlICckYnJlYWtwb2ludC1waG9uZS1zbWFsbCcgdmFsdWUgaW4gdGhlIF92YXJzLnNjc3MgZmlsZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwLlwiXG4gICAgfTtcbn1cblxuLy8gTWluLXdpZHRoXG4vLyB0aGUgZ2l2ZW4gc2NyZWVuIHNpemUgb3IgbGFyZ2VyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuQG1peGluIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludDogJGJyZWFrcG9pbnRzKSB7XG4gICAgXG4gICAgJHZhbHVlczogbWFwLXZhbHVlcygkbWFwOiAkYnJlYWtwb2ludHMpO1xuICAgICRsYXN0LXZhbHVlOiBudGgoJHZhbHVlcywgOCk7XG4gICAgJG1pbl9icmVha3BvaW50OiBtYXAtZ2V0KCRicmVha3BvaW50LCAkbmFtZSk7XG5cbiAgICBAaWYgJGxhc3QtdmFsdWUgPiAwIHtcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICgkbWluX2JyZWFrcG9pbnQgLSAwcHgpKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgICBAd2FybiBcIlRoZSAnJGJyZWFrcG9pbnQtcGhvbmUtc21hbGwnIHZhbHVlIGluIHRoZSBfdmFycy5zY3NzIGZpbGUgbXVzdCBiZSBncmVhdGVyIHRoYW4gMC5cIlxuICAgIH07XG59XG5cbi8vIFRhYmxlc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbkBtaXhpbiBicmVha3BvaW50LXRhYmxlIHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogKCRicmVha3BvaW50LXRhYmxlIC0gMXB4KSkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59Il19 */